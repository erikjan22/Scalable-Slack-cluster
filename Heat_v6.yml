heat_template_version: 2016-10-14

description: Cluster for Qtl

parameters:
  image:
    type: string
    label: Image name or ID
    description: Image to be used for compute instance
    default: dca488d5-ca09-458f-8983-898d3ddcfd2b

  flavor:
    type: string
    label: Flavor
    description: Type of instance (flavor) to be used
    default: ssc.small

  key:
    type: string
    label: Key name
    description: Name of key-pair to be used for compute instance
    default: zain4_key

  public_network_name:
    type: string
    label: Public network name or ID
    description: Public network with floating IP addresses.
    default: Public External IPv4 Network
  
  private_network_name:
    type: string
    label: Private network name or ID
    description: Private network with internal IP addresses.
    default: team6_private_network
    
  private_subnet_name:
    type: string
    label: Private subnet name or ID
    description: Private subnet with internal IP addresses.
    default: team6_private_subnet

  node_count:
    type: number
    default: 4
    description: Default number of nodes
    
# Resource allocation
resources:
  team6_cluster_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: team6_cluster_group
      rules:
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
  team6_master_group:
    type: OS::Neutron::SecurityGroup
    properties:
      name: team6_master_group
      rules:
        - protocol: tcp
          port_range_min: 5555
          port_range_max: 5555
        - protocol: tcp
          port_range_min: 5000
          port_range_max: 5000
        - protocol: tcp
          port_range_min: 3306
          port_range_max: 3306
        - protocol: tcp
          port_range_min: 5672
          port_range_max: 5672
        - protocol: tcp
          port_range_min: 22
          port_range_max: 22
  
  private_network:
    type: OS::Neutron::Net
    properties:
        name: { get_param: private_network_name }
    
  private_subnet:
    type: OS::Neutron::Subnet
    properties:
      name: { get_param: private_subnet_name }
      network_id: { get_resource: private_network }
      cidr: 10.10.9.0/24
#      gateway_ip: 10.10.8.1
#      allocation_pools: [ {start: 10.10.8.200, end: 10.10.8.350} ]
      dns_nameservers:
        - 130.238.164.6 
        - 130.238.4.133 
        - 130.238.7.10
        - 130.239.1.90
        - 129.16.1.53
  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: public_network_name }

  router-interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet: { get_resource: private_subnet }

  master_port0:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: private_network }
#      fixed_ips: [{"subnet": { get_resource: private_subnet } , "ip_address": 10.10.12.4}]
      security_groups:
        - { get_resource: team6_cluster_group }
        - { get_resource: team6_master_group }
  
  master:
    type: OS::Nova::Server
    properties:
      name: team6_master_group
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key }
      networks:
        - port: { get_resource: master_port0 }
      user_data: |
              #!/bin/bash
              echo "Hello, World!"
              echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7MO3V59P1dV0RVzyBtWr8v/N4ND9391MOl2Urv1G3qFx7kob0SLPnr4mpew9xDB+3ZzDPRlFts7eLeTiq4pWpwybeZ40KUnAHKttTli7uhAkBKpHYK$
              apt-add-repository -y ppa:ansible/ansible
              apt-get update -y
              apt-get upgrade -y
      user_data_format: RAW

  group_slaves:
    type: OS::Heat::ResourceGroup
    properties:
      count: {get_param: node_count}
      resource_def:
        type: OS::Nova::Server
        properties:
          name: team6_cluster_slave-%index%
          flavor: { get_param: flavor }
          image: { get_param: image }
          key_name: { get_param: key }
          networks:
            - network: { get_resource: private_network }
          user_data: |
            #!/bin/sh
            echo "Hello, World!"
            echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7MO3V59P1dV0RVzyBtWr8v/N4ND9391MOl2Urv1G3qFx7kob0SLPnr4mpew9xDB+3ZzDPRlFts7eLeTiq4pWpwybeZ40KUnAHKttTli7uhAkBKpHYKMOH7WvuMuHYJjY$" >> /home/ubuntu/.ssh/authorized_keys
            apt-get update -y
            apt-get upgrade -y
          user_data_format: RAW

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network_name }

  floating_ip_assoc:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: floating_ip }
      port_id: { get_resource: master_port0 } 


# Output in case of successful booting
outputs:
  instance_name:
    description: Name of the instance
    value: { get_attr: [master, name] }
  instance_ip:
    description: IP address of the instance
    value: { get_attr: [master, first_address, floating_ip, floating_ip_address] }
